name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0

      - name: Install dependencies (MuSe)
        run: npm install --prefix MuSe

      - name: Install dependencies (Plugin)
        run: npm install --prefix MuSe-Remix-Plugin

      - name: Install dependencies (API)
        run: npm install --prefix muse-api-service

      - name: Run tests (muse-api-service)
        working-directory: muse-api-service
        run: npm test

      - name: Run tests (muse-remix-plugin)
        working-directory: MuSe-Remix-Plugin
        run: npm test

      - name: Start server
        working-directory: muse-api-service
        run: node server.js &

      - name: Run tests Playwright
        working-directory: MuSe-Remix-Plugin
        run: npx playwright test

      - name: Get version from package.json (API)
        id: version
        run: echo "VERSION=$(jq -r .version muse-api-service/package.json)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/muse-remix-plugin:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/muse-remix-plugin:${{ steps.version.outputs.VERSION }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/muse-remix-plugin:latest
          cache-to: type=inline
