name: CI/CD Pipeline

on:
  push:
    branches: ["**"]
  pull_request:
    branches: [main]

jobs:
 testing-jest:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0

      - name: Install dependencies (MuSe)
        run: npm install --prefix MuSe

      - name: Install dependencies (Plugin)
        run: npm install --prefix MuSe-Remix-Plugin

      - name: Install dependencies (API)
        run: npm install --prefix muse-api-service

      - name: install brownie
        run: |
          python3 -m pip install --upgrade pip
          pip install eth-brownie

      - name: install ganache
        run: |
          npm install -g ganache

      - name: Run tests (muse-api-service)
        working-directory: muse-api-service
        run: npm test

      - name: Run tests (muse-remix-plugin)
        working-directory: MuSe-Remix-Plugin
        run: npm test



 testing-e2e-deploy:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Get version from package.json (API)

        id: version
        run: echo "VERSION=$(jq -r .version muse-api-service/package.json)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx

        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub

        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t muse-remix-plugin:${{ steps.version.outputs.VERSION }} .

      - name: Start docker image
        run: |
          docker run --rm -p 3001:3001 muse-remix-plugin:${{ steps.version.outputs.VERSION }}
          sleep 10  # Wait for the container to be fully up and running


      - name: Run tests Playwright
        if: false
        working-directory: MuSe-Remix-Plugin
        run: npm run playwright test

      - name: Push Docker image (only on main)
        if: github.ref == 'refs/heads/main'
        run: |
            docker tag muse-remix-plugin:${{ steps.version.outputs.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/muse-remix-plugin:latest
            docker tag muse-remix-plugin:${{ steps.version.outputs.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/muse-remix-plugin:${{ steps.version.outputs.VERSION }} 
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/iris_api:latest


      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/muse-remix-plugin:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/muse-remix-plugin:${{ steps.version.outputs.VERSION }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/muse-remix-plugin:latest
          cache-to: type=inline
